formatVersion: 1
inputs:
  cloud:
    type: string
    oneOf:
      - title: VMware
        const: 'env:vmw'
      - title: AWS
        const: 'env:aws'
    default: 'env:vmw'
    title: Location
  flavor:
    type: string
    oneOf:
      - title: 1Core 2GRam
        const: small
      - title: 2Core 4GRam
        const: medium
      - title: 2Core 8GRam
        const: large
    default: medium
    title: VM Spec
  password:
    type: string
    default: password
    title: Password
  count:
    type: integer
    minimum: 1
    maximum: 3
    default: 1
    title: Web VM Count
  version:
    type: string
    enum:
      - 5.0.7
      - 5.1.3
      - 5.2.4
    default: 5.2.4
    title: Wodpress Version
resources:
  net:
    type: Cloud.Network
    properties:
      networkType: '${"routed"}'
      constraints:
        - tag: 'net:dev'
  lb:
    type: Cloud.LoadBalancer
    properties:
      network: '${resource.net.id}'
      instances:
        - '${resource.web.id}'
      internetFacing: false
      routes:
        - protocol: HTTP
          port: '80'
          instanceProtocol: HTTP
          instancePort: '80'
          healthCheckConfiguration:
            protocol: HTTP
            port: '80'
            urlPath: /index.php
            intervalSeconds: 30
            timeoutSeconds: 5
            unhealthyThreshold: 5
            healthyThreshold: 2
  web:
    type: Cloud.Machine
    dependsOn:
      - db
    properties:
      name: wp-web
      image: ubuntu18
      flavor: '${input.flavor}'
      count: '${input.count}'
      constraints:
        - tag: '${input.cloud}'
      networks:
        - network: '${resource.net.id}'
          assignment: static
      cloudConfig: |
        #cloud-config
        users:
          - name: ${env.requestedBy}
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            groups: users, admin
            lock_passwd: false
        chpasswd:
          list: |
            ${env.requestedBy}:${input.password}
          expire: False
        repo_update: true
        repo_upgrade: all
        packages:
         - nfs-common
         - apache2
         - php
         - php-gd
         - php-xml
         - php-zip
         - php-curl
         - php-intl
         - php-soap
         - php-mysql
         - php-xmlrpc
         - php-mbstring
         - libapache2-mod-php
        runcmd:
         - rm -rf /var/www/html/*
         - echo "${db.networks[0].address}:/wordpress    /var/www/html    nfs    defaults    0    0" >> /etc/fstab
         - mount -a
         - sed -i -e "s/localhost/${db.networks[0].address}/g" /var/www/html/wp-config.php
         - service apache2 reload
  db:
    type: Cloud.Machine
    properties:
      name: wp-db
      image: ubuntu18
      flavor: '${input.flavor}'
      constraints:
        - tag: '${input.cloud}'
      networks:
        - network: '${resource.net.id}'
          assignment: static
      cloudConfig: |
        #cloud-config
        users:
          - name: ${env.requestedBy}
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            groups: users, admin
            lock_passwd: false
        chpasswd:
          list: |
            ${env.requestedBy}:${input.password}
          expire: False
        repo_update: true
        repo_upgrade: all
        packages:
         - nfs-kernel-server
         - mysql-server
        runcmd:
         - mkdir -p /wordpress
         - cd /wordpress && wget https://wordpress.org/wordpress-${input.version}.tar.gz && tar -xzf /wordpress/wordpress-${input.version}.tar.gz -C /wordpress --strip-components 1
         - mv /wordpress/wp-config-sample.php /wordpress/wp-config.php
         - sed -i -e "s/database_name_here/wordpress/g" /wordpress/wp-config.php
         - sed -i -e "s/username_here/${env.requestedBy}/g" /wordpress/wp-config.php
         - sed -i -e "s/password_here/${input.password}/g" /wordpress/wp-config.php
         - echo "define('FS_METHOD', 'direct');" >> /wordpress/wp-config.php
         - chown -R www-data:www-data /wordpress
         - echo "/wordpress    *(rw,async,no_root_squash,no_subtree_check)" > /etc/exports
         - exportfs -a
         - systemctl restart nfs-kernel-server
         - sed -e '/bind-address/ s/^#*/#/' -i /etc/mysql/mysql.conf.d/mysqld.cnf
         - mysql -u root -e "create database wordpress character set utf8; grant all privileges on wordpress.* to '${env.requestedBy}'@'%' identified by '${input.password}'; flush privileges;"
         - service mysql restart
